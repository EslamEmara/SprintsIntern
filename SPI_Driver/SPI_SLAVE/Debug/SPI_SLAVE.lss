
SPI_SLAVE.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000cd6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000010  00800060  00000cd6  00000d6a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000006  00800070  00800070  00000d7a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000d7a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000dac  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001c0  00000000  00000000  00000de8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000019ee  00000000  00000000  00000fa8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b98  00000000  00000000  00002996  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000db1  00000000  00000000  0000352e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000544  00000000  00000000  000042e0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000870  00000000  00000000  00004824  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000011a2  00000000  00000000  00005094  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001c0  00000000  00000000  00006236  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 e7 03 	jmp	0x7ce	; 0x7ce <__vector_4>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 c0 03 	jmp	0x780	; 0x780 <__vector_7>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 99 03 	jmp	0x732	; 0x732 <__vector_10>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 ed       	ldi	r30, 0xD6	; 214
  68:	fc e0       	ldi	r31, 0x0C	; 12
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 37       	cpi	r26, 0x70	; 112
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a0 e7       	ldi	r26, 0x70	; 112
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a6 37       	cpi	r26, 0x76	; 118
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 1f 01 	call	0x23e	; 0x23e <main>
  8a:	0c 94 69 06 	jmp	0xcd2	; 0xcd2 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <WriteLowNibble>:
* Function to clean the LCD screen.
* Inputs: NONE
* void return.
**/
void Lcd_ClrScreen(){
	Lcd_SendCommand(CLR_DISPLAY);
  92:	cf 93       	push	r28
  94:	c8 2f       	mov	r28, r24
  96:	48 2f       	mov	r20, r24
  98:	41 70       	andi	r20, 0x01	; 1
  9a:	63 e0       	ldi	r22, 0x03	; 3
  9c:	85 e3       	ldi	r24, 0x35	; 53
  9e:	0e 94 93 01 	call	0x326	; 0x326 <DIO_write>
  a2:	c1 fb       	bst	r28, 1
  a4:	44 27       	eor	r20, r20
  a6:	40 f9       	bld	r20, 0
  a8:	64 e0       	ldi	r22, 0x04	; 4
  aa:	85 e3       	ldi	r24, 0x35	; 53
  ac:	0e 94 93 01 	call	0x326	; 0x326 <DIO_write>
  b0:	c2 fb       	bst	r28, 2
  b2:	44 27       	eor	r20, r20
  b4:	40 f9       	bld	r20, 0
  b6:	65 e0       	ldi	r22, 0x05	; 5
  b8:	85 e3       	ldi	r24, 0x35	; 53
  ba:	0e 94 93 01 	call	0x326	; 0x326 <DIO_write>
  be:	c3 fb       	bst	r28, 3
  c0:	44 27       	eor	r20, r20
  c2:	40 f9       	bld	r20, 0
  c4:	66 e0       	ldi	r22, 0x06	; 6
  c6:	85 e3       	ldi	r24, 0x35	; 53
  c8:	0e 94 93 01 	call	0x326	; 0x326 <DIO_write>
  cc:	cf 91       	pop	r28
  ce:	08 95       	ret

000000d0 <WriteHighNibble>:
  d0:	cf 93       	push	r28
  d2:	c8 2f       	mov	r28, r24
  d4:	84 fb       	bst	r24, 4
  d6:	44 27       	eor	r20, r20
  d8:	40 f9       	bld	r20, 0
  da:	63 e0       	ldi	r22, 0x03	; 3
  dc:	85 e3       	ldi	r24, 0x35	; 53
  de:	0e 94 93 01 	call	0x326	; 0x326 <DIO_write>
  e2:	c5 fb       	bst	r28, 5
  e4:	44 27       	eor	r20, r20
  e6:	40 f9       	bld	r20, 0
  e8:	64 e0       	ldi	r22, 0x04	; 4
  ea:	85 e3       	ldi	r24, 0x35	; 53
  ec:	0e 94 93 01 	call	0x326	; 0x326 <DIO_write>
  f0:	c6 fb       	bst	r28, 6
  f2:	44 27       	eor	r20, r20
  f4:	40 f9       	bld	r20, 0
  f6:	65 e0       	ldi	r22, 0x05	; 5
  f8:	85 e3       	ldi	r24, 0x35	; 53
  fa:	0e 94 93 01 	call	0x326	; 0x326 <DIO_write>
  fe:	4c 2f       	mov	r20, r28
 100:	44 1f       	adc	r20, r20
 102:	44 27       	eor	r20, r20
 104:	44 1f       	adc	r20, r20
 106:	66 e0       	ldi	r22, 0x06	; 6
 108:	85 e3       	ldi	r24, 0x35	; 53
 10a:	0e 94 93 01 	call	0x326	; 0x326 <DIO_write>
 10e:	cf 91       	pop	r28
 110:	08 95       	ret

00000112 <ToggleEN>:
 112:	0f 93       	push	r16
 114:	1f 93       	push	r17
 116:	62 e0       	ldi	r22, 0x02	; 2
 118:	85 e3       	ldi	r24, 0x35	; 53
 11a:	0e 94 b0 01 	call	0x360	; 0x360 <DIO_setPin>
 11e:	00 91 60 00 	lds	r16, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 122:	10 91 61 00 	lds	r17, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 126:	20 91 62 00 	lds	r18, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 12a:	30 91 63 00 	lds	r19, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 12e:	40 91 64 00 	lds	r20, 0x0064	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 132:	50 91 65 00 	lds	r21, 0x0065	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 136:	6d eb       	ldi	r22, 0xBD	; 189
 138:	77 e3       	ldi	r23, 0x37	; 55
 13a:	86 e8       	ldi	r24, 0x86	; 134
 13c:	95 e3       	ldi	r25, 0x35	; 53
 13e:	0e 94 aa 02 	call	0x554	; 0x554 <Timer_Delay>
 142:	62 e0       	ldi	r22, 0x02	; 2
 144:	85 e3       	ldi	r24, 0x35	; 53
 146:	0e 94 bd 01 	call	0x37a	; 0x37a <DIO_clearPin>
 14a:	1f 91       	pop	r17
 14c:	0f 91       	pop	r16
 14e:	08 95       	ret

00000150 <Lcd_SendCommand>:
 150:	cf 93       	push	r28
 152:	c8 2f       	mov	r28, r24
 154:	0e 94 68 00 	call	0xd0	; 0xd0 <WriteHighNibble>
 158:	60 e0       	ldi	r22, 0x00	; 0
 15a:	85 e3       	ldi	r24, 0x35	; 53
 15c:	0e 94 bd 01 	call	0x37a	; 0x37a <DIO_clearPin>
 160:	0e 94 89 00 	call	0x112	; 0x112 <ToggleEN>
 164:	8c 2f       	mov	r24, r28
 166:	0e 94 49 00 	call	0x92	; 0x92 <WriteLowNibble>
 16a:	0e 94 89 00 	call	0x112	; 0x112 <ToggleEN>
 16e:	cf 91       	pop	r28
 170:	08 95       	ret

00000172 <Lcd_init>:
 172:	40 91 60 00 	lds	r20, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
 176:	50 91 61 00 	lds	r21, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 17a:	60 91 62 00 	lds	r22, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 17e:	70 91 63 00 	lds	r23, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 182:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <__DATA_REGION_ORIGIN__+0x4>
 186:	90 91 65 00 	lds	r25, 0x0065	; 0x800065 <__DATA_REGION_ORIGIN__+0x5>
 18a:	0e 94 67 02 	call	0x4ce	; 0x4ce <Timer_init>
 18e:	41 e0       	ldi	r20, 0x01	; 1
 190:	63 e0       	ldi	r22, 0x03	; 3
 192:	85 e3       	ldi	r24, 0x35	; 53
 194:	0e 94 32 01 	call	0x264	; 0x264 <DIO_setPinDir>
 198:	41 e0       	ldi	r20, 0x01	; 1
 19a:	64 e0       	ldi	r22, 0x04	; 4
 19c:	85 e3       	ldi	r24, 0x35	; 53
 19e:	0e 94 32 01 	call	0x264	; 0x264 <DIO_setPinDir>
 1a2:	41 e0       	ldi	r20, 0x01	; 1
 1a4:	65 e0       	ldi	r22, 0x05	; 5
 1a6:	85 e3       	ldi	r24, 0x35	; 53
 1a8:	0e 94 32 01 	call	0x264	; 0x264 <DIO_setPinDir>
 1ac:	41 e0       	ldi	r20, 0x01	; 1
 1ae:	66 e0       	ldi	r22, 0x06	; 6
 1b0:	85 e3       	ldi	r24, 0x35	; 53
 1b2:	0e 94 32 01 	call	0x264	; 0x264 <DIO_setPinDir>
 1b6:	41 e0       	ldi	r20, 0x01	; 1
 1b8:	60 e0       	ldi	r22, 0x00	; 0
 1ba:	85 e3       	ldi	r24, 0x35	; 53
 1bc:	0e 94 32 01 	call	0x264	; 0x264 <DIO_setPinDir>
 1c0:	41 e0       	ldi	r20, 0x01	; 1
 1c2:	62 e0       	ldi	r22, 0x02	; 2
 1c4:	85 e3       	ldi	r24, 0x35	; 53
 1c6:	0e 94 32 01 	call	0x264	; 0x264 <DIO_setPinDir>
 1ca:	41 e0       	ldi	r20, 0x01	; 1
 1cc:	61 e0       	ldi	r22, 0x01	; 1
 1ce:	85 e3       	ldi	r24, 0x35	; 53
 1d0:	0e 94 32 01 	call	0x264	; 0x264 <DIO_setPinDir>
 1d4:	82 e0       	ldi	r24, 0x02	; 2
 1d6:	0e 94 a8 00 	call	0x150	; 0x150 <Lcd_SendCommand>
 1da:	88 e2       	ldi	r24, 0x28	; 40
 1dc:	0e 94 a8 00 	call	0x150	; 0x150 <Lcd_SendCommand>
 1e0:	8c e0       	ldi	r24, 0x0C	; 12
 1e2:	0e 94 a8 00 	call	0x150	; 0x150 <Lcd_SendCommand>
 1e6:	86 e0       	ldi	r24, 0x06	; 6
 1e8:	0e 94 a8 00 	call	0x150	; 0x150 <Lcd_SendCommand>
 1ec:	81 e0       	ldi	r24, 0x01	; 1
 1ee:	0e 94 a8 00 	call	0x150	; 0x150 <Lcd_SendCommand>
 1f2:	08 95       	ret

000001f4 <Lcd_GoToXY>:
 1f4:	60 31       	cpi	r22, 0x10	; 16
 1f6:	88 f4       	brcc	.+34     	; 0x21a <Lcd_GoToXY+0x26>
 1f8:	82 30       	cpi	r24, 0x02	; 2
 1fa:	78 f4       	brcc	.+30     	; 0x21a <Lcd_GoToXY+0x26>
 1fc:	81 11       	cpse	r24, r1
 1fe:	06 c0       	rjmp	.+12     	; 0x20c <Lcd_GoToXY+0x18>
 200:	86 2f       	mov	r24, r22
 202:	8f 70       	andi	r24, 0x0F	; 15
 204:	80 68       	ori	r24, 0x80	; 128
 206:	0e 94 a8 00 	call	0x150	; 0x150 <Lcd_SendCommand>
 20a:	08 95       	ret
 20c:	81 30       	cpi	r24, 0x01	; 1
 20e:	29 f4       	brne	.+10     	; 0x21a <Lcd_GoToXY+0x26>
 210:	86 2f       	mov	r24, r22
 212:	8f 70       	andi	r24, 0x0F	; 15
 214:	80 6c       	ori	r24, 0xC0	; 192
 216:	0e 94 a8 00 	call	0x150	; 0x150 <Lcd_SendCommand>
 21a:	08 95       	ret

0000021c <Lcd_SendChar>:
*Input: uint8_t ascii code of the character 
*Expected Output: the character is printed on the screen.
*void return.
*/
void Lcd_SendChar( uint8_t data )
{
 21c:	cf 93       	push	r28
 21e:	c8 2f       	mov	r28, r24
	#if LCD_MODE == FOUR_BIT_MODE
		WriteHighNibble(data);					
 220:	0e 94 68 00 	call	0xd0	; 0xd0 <WriteHighNibble>
	
		DIO_setPin(LCD_RS);						/*Write to Data register*/
 224:	60 e0       	ldi	r22, 0x00	; 0
 226:	85 e3       	ldi	r24, 0x35	; 53
 228:	0e 94 b0 01 	call	0x360	; 0x360 <DIO_setPin>
		ToggleEN();
 22c:	0e 94 89 00 	call	0x112	; 0x112 <ToggleEN>
	
		WriteLowNibble(data);
 230:	8c 2f       	mov	r24, r28
 232:	0e 94 49 00 	call	0x92	; 0x92 <WriteLowNibble>
		ToggleEN();
 236:	0e 94 89 00 	call	0x112	; 0x112 <ToggleEN>
	#endif
}
 23a:	cf 91       	pop	r28
 23c:	08 95       	ret

0000023e <main>:

int main(void)
{
	sint8_t recieve_char;

	SPI_Slave_Init();
 23e:	0e 94 cb 01 	call	0x396	; 0x396 <SPI_Slave_Init>
	Lcd_init();
 242:	0e 94 b9 00 	call	0x172	; 0x172 <Lcd_init>
	
	DIO_setPortDir(PORTC,OUT);
 246:	61 e0       	ldi	r22, 0x01	; 1
 248:	85 e3       	ldi	r24, 0x35	; 53
 24a:	0e 94 71 01 	call	0x2e2	; 0x2e2 <DIO_setPortDir>
	
    while (1) 
    {
		recieve_char = SPI_Slave_ReceiveByte();
 24e:	0e 94 de 01 	call	0x3bc	; 0x3bc <SPI_Slave_ReceiveByte>
 252:	c8 2f       	mov	r28, r24
		Lcd_GoToXY(0,0);
 254:	60 e0       	ldi	r22, 0x00	; 0
 256:	80 e0       	ldi	r24, 0x00	; 0
 258:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <Lcd_GoToXY>
		Lcd_SendChar(recieve_char);
 25c:	8c 2f       	mov	r24, r28
 25e:	0e 94 0e 01 	call	0x21c	; 0x21c <Lcd_SendChar>
 262:	f5 cf       	rjmp	.-22     	; 0x24e <main+0x10>

00000264 <DIO_setPinDir>:
* this example set the first 4 bits to 0xF HIGH and the last 4 bits to 0x0 LOW
* void return.
*/
void DIO_writePort(EN_PORTS_t port,uint8_t bin_pins)
{
	REG(port)=bin_pins;
 264:	41 30       	cpi	r20, 0x01	; 1
 266:	69 f4       	brne	.+26     	; 0x282 <DIO_setPinDir+0x1e>
 268:	e8 2f       	mov	r30, r24
 26a:	f0 e0       	ldi	r31, 0x00	; 0
 26c:	22 91       	ld	r18, -Z
 26e:	81 e0       	ldi	r24, 0x01	; 1
 270:	90 e0       	ldi	r25, 0x00	; 0
 272:	02 c0       	rjmp	.+4      	; 0x278 <DIO_setPinDir+0x14>
 274:	88 0f       	add	r24, r24
 276:	99 1f       	adc	r25, r25
 278:	6a 95       	dec	r22
 27a:	e2 f7       	brpl	.-8      	; 0x274 <DIO_setPinDir+0x10>
 27c:	82 2b       	or	r24, r18
 27e:	80 83       	st	Z, r24
 280:	08 95       	ret
 282:	41 11       	cpse	r20, r1
 284:	16 c0       	rjmp	.+44     	; 0x2b2 <DIO_setPinDir+0x4e>
 286:	e8 2f       	mov	r30, r24
 288:	f0 e0       	ldi	r31, 0x00	; 0
 28a:	df 01       	movw	r26, r30
 28c:	2e 91       	ld	r18, -X
 28e:	81 e0       	ldi	r24, 0x01	; 1
 290:	90 e0       	ldi	r25, 0x00	; 0
 292:	02 c0       	rjmp	.+4      	; 0x298 <DIO_setPinDir+0x34>
 294:	88 0f       	add	r24, r24
 296:	99 1f       	adc	r25, r25
 298:	6a 95       	dec	r22
 29a:	e2 f7       	brpl	.-8      	; 0x294 <DIO_setPinDir+0x30>
 29c:	98 2f       	mov	r25, r24
 29e:	90 95       	com	r25
 2a0:	92 23       	and	r25, r18
 2a2:	9c 93       	st	X, r25
 2a4:	90 b7       	in	r25, 0x30	; 48
 2a6:	94 60       	ori	r25, 0x04	; 4
 2a8:	90 bf       	out	0x30, r25	; 48
 2aa:	90 81       	ld	r25, Z
 2ac:	89 2b       	or	r24, r25
 2ae:	80 83       	st	Z, r24
 2b0:	08 95       	ret
 2b2:	42 30       	cpi	r20, 0x02	; 2
 2b4:	a9 f4       	brne	.+42     	; 0x2e0 <DIO_setPinDir+0x7c>
 2b6:	e8 2f       	mov	r30, r24
 2b8:	f0 e0       	ldi	r31, 0x00	; 0
 2ba:	df 01       	movw	r26, r30
 2bc:	2e 91       	ld	r18, -X
 2be:	81 e0       	ldi	r24, 0x01	; 1
 2c0:	90 e0       	ldi	r25, 0x00	; 0
 2c2:	02 c0       	rjmp	.+4      	; 0x2c8 <DIO_setPinDir+0x64>
 2c4:	88 0f       	add	r24, r24
 2c6:	99 1f       	adc	r25, r25
 2c8:	6a 95       	dec	r22
 2ca:	e2 f7       	brpl	.-8      	; 0x2c4 <DIO_setPinDir+0x60>
 2cc:	98 2f       	mov	r25, r24
 2ce:	90 95       	com	r25
 2d0:	92 23       	and	r25, r18
 2d2:	9c 93       	st	X, r25
 2d4:	90 b7       	in	r25, 0x30	; 48
 2d6:	9b 7f       	andi	r25, 0xFB	; 251
 2d8:	90 bf       	out	0x30, r25	; 48
 2da:	90 81       	ld	r25, Z
 2dc:	89 2b       	or	r24, r25
 2de:	80 83       	st	Z, r24
 2e0:	08 95       	ret

000002e2 <DIO_setPortDir>:
 2e2:	61 30       	cpi	r22, 0x01	; 1
 2e4:	31 f4       	brne	.+12     	; 0x2f2 <DIO_setPortDir+0x10>
 2e6:	e8 2f       	mov	r30, r24
 2e8:	f0 e0       	ldi	r31, 0x00	; 0
 2ea:	31 97       	sbiw	r30, 0x01	; 1
 2ec:	8f ef       	ldi	r24, 0xFF	; 255
 2ee:	80 83       	st	Z, r24
 2f0:	08 95       	ret
 2f2:	61 11       	cpse	r22, r1
 2f4:	0b c0       	rjmp	.+22     	; 0x30c <DIO_setPortDir+0x2a>
 2f6:	e8 2f       	mov	r30, r24
 2f8:	f0 e0       	ldi	r31, 0x00	; 0
 2fa:	df 01       	movw	r26, r30
 2fc:	11 97       	sbiw	r26, 0x01	; 1
 2fe:	1c 92       	st	X, r1
 300:	80 b7       	in	r24, 0x30	; 48
 302:	84 60       	ori	r24, 0x04	; 4
 304:	80 bf       	out	0x30, r24	; 48
 306:	8f ef       	ldi	r24, 0xFF	; 255
 308:	80 83       	st	Z, r24
 30a:	08 95       	ret
 30c:	62 30       	cpi	r22, 0x02	; 2
 30e:	51 f4       	brne	.+20     	; 0x324 <DIO_setPortDir+0x42>
 310:	e8 2f       	mov	r30, r24
 312:	f0 e0       	ldi	r31, 0x00	; 0
 314:	df 01       	movw	r26, r30
 316:	11 97       	sbiw	r26, 0x01	; 1
 318:	1c 92       	st	X, r1
 31a:	80 b7       	in	r24, 0x30	; 48
 31c:	8b 7f       	andi	r24, 0xFB	; 251
 31e:	80 bf       	out	0x30, r24	; 48
 320:	8f ef       	ldi	r24, 0xFF	; 255
 322:	80 83       	st	Z, r24
 324:	08 95       	ret

00000326 <DIO_write>:
 326:	41 30       	cpi	r20, 0x01	; 1
 328:	69 f4       	brne	.+26     	; 0x344 <DIO_write+0x1e>
 32a:	e8 2f       	mov	r30, r24
 32c:	f0 e0       	ldi	r31, 0x00	; 0
 32e:	20 81       	ld	r18, Z
 330:	81 e0       	ldi	r24, 0x01	; 1
 332:	90 e0       	ldi	r25, 0x00	; 0
 334:	02 c0       	rjmp	.+4      	; 0x33a <DIO_write+0x14>
 336:	88 0f       	add	r24, r24
 338:	99 1f       	adc	r25, r25
 33a:	6a 95       	dec	r22
 33c:	e2 f7       	brpl	.-8      	; 0x336 <DIO_write+0x10>
 33e:	82 2b       	or	r24, r18
 340:	80 83       	st	Z, r24
 342:	08 95       	ret
 344:	e8 2f       	mov	r30, r24
 346:	f0 e0       	ldi	r31, 0x00	; 0
 348:	20 81       	ld	r18, Z
 34a:	81 e0       	ldi	r24, 0x01	; 1
 34c:	90 e0       	ldi	r25, 0x00	; 0
 34e:	02 c0       	rjmp	.+4      	; 0x354 <DIO_write+0x2e>
 350:	88 0f       	add	r24, r24
 352:	99 1f       	adc	r25, r25
 354:	6a 95       	dec	r22
 356:	e2 f7       	brpl	.-8      	; 0x350 <DIO_write+0x2a>
 358:	80 95       	com	r24
 35a:	82 23       	and	r24, r18
 35c:	80 83       	st	Z, r24
 35e:	08 95       	ret

00000360 <DIO_setPin>:
 360:	e8 2f       	mov	r30, r24
 362:	f0 e0       	ldi	r31, 0x00	; 0
 364:	80 81       	ld	r24, Z
 366:	21 e0       	ldi	r18, 0x01	; 1
 368:	30 e0       	ldi	r19, 0x00	; 0
 36a:	02 c0       	rjmp	.+4      	; 0x370 <DIO_setPin+0x10>
 36c:	22 0f       	add	r18, r18
 36e:	33 1f       	adc	r19, r19
 370:	6a 95       	dec	r22
 372:	e2 f7       	brpl	.-8      	; 0x36c <DIO_setPin+0xc>
 374:	28 2b       	or	r18, r24
 376:	20 83       	st	Z, r18
 378:	08 95       	ret

0000037a <DIO_clearPin>:
*Function to clear Pin to LOW 
*Inputs : EN_PORTS_t port ,EN_PINS_t pin no
*/	
void DIO_clearPin(EN_PORTS_t port,EN_PINS_t pin)
{
	CLRBIT(REG(port),pin);
 37a:	e8 2f       	mov	r30, r24
 37c:	f0 e0       	ldi	r31, 0x00	; 0
 37e:	80 81       	ld	r24, Z
 380:	21 e0       	ldi	r18, 0x01	; 1
 382:	30 e0       	ldi	r19, 0x00	; 0
 384:	02 c0       	rjmp	.+4      	; 0x38a <DIO_clearPin+0x10>
 386:	22 0f       	add	r18, r18
 388:	33 1f       	adc	r19, r19
 38a:	6a 95       	dec	r22
 38c:	e2 f7       	brpl	.-8      	; 0x386 <DIO_clearPin+0xc>
 38e:	20 95       	com	r18
 390:	28 23       	and	r18, r24
 392:	20 83       	st	Z, r18
 394:	08 95       	ret

00000396 <SPI_Slave_Init>:
*Inputs:None
*void return
*/
void SPI_Slave_Init()
{
	CLRBIT(SPI_PORTB_DIR,MOSI);
 396:	87 b3       	in	r24, 0x17	; 23
 398:	8f 7d       	andi	r24, 0xDF	; 223
 39a:	87 bb       	out	0x17, r24	; 23
	CLRBIT(SPI_PORTB_DIR,SCK);
 39c:	87 b3       	in	r24, 0x17	; 23
 39e:	8f 77       	andi	r24, 0x7F	; 127
 3a0:	87 bb       	out	0x17, r24	; 23
	CLRBIT(SPI_PORTB_DIR,SS);
 3a2:	87 b3       	in	r24, 0x17	; 23
 3a4:	8f 7e       	andi	r24, 0xEF	; 239
 3a6:	87 bb       	out	0x17, r24	; 23
	SETBIT(SPI_PORTB_DIR,MISO);
 3a8:	87 b3       	in	r24, 0x17	; 23
 3aa:	80 64       	ori	r24, 0x40	; 64
 3ac:	87 bb       	out	0x17, r24	; 23
	
	SPI_ENABLE;
 3ae:	8d b1       	in	r24, 0x0d	; 13
 3b0:	80 64       	ori	r24, 0x40	; 64
 3b2:	8d b9       	out	0x0d, r24	; 13
	SLAVE_ENABLE;
 3b4:	8d b1       	in	r24, 0x0d	; 13
 3b6:	8f 7e       	andi	r24, 0xEF	; 239
 3b8:	8d b9       	out	0x0d, r24	; 13
 3ba:	08 95       	ret

000003bc <SPI_Slave_ReceiveByte>:
input:none
*return: received byte
*/
uint8_t SPI_Slave_ReceiveByte()
{
	while(!GETBIT(SPI_STATUS,SPI_FLAG));
 3bc:	8e b1       	in	r24, 0x0e	; 14
 3be:	77 9b       	sbis	0x0e, 7	; 14
 3c0:	fd cf       	rjmp	.-6      	; 0x3bc <SPI_Slave_ReceiveByte>
	return(SPI_DATA_REG);
 3c2:	8f b1       	in	r24, 0x0f	; 15
}
 3c4:	08 95       	ret

000003c6 <adjustPrescalarT0>:
void Timer_Stop(EN_TIMER_t timer){
	if (timer == TIMER1){
		TCCR1B =0x00;
	}
	else{
		REG(timer) = 0x00;
 3c6:	81 30       	cpi	r24, 0x01	; 1
 3c8:	91 05       	cpc	r25, r1
 3ca:	51 f4       	brne	.+20     	; 0x3e0 <adjustPrescalarT0+0x1a>
 3cc:	83 b7       	in	r24, 0x33	; 51
 3ce:	81 60       	ori	r24, 0x01	; 1
 3d0:	83 bf       	out	0x33, r24	; 51
 3d2:	83 b7       	in	r24, 0x33	; 51
 3d4:	8d 7f       	andi	r24, 0xFD	; 253
 3d6:	83 bf       	out	0x33, r24	; 51
 3d8:	83 b7       	in	r24, 0x33	; 51
 3da:	8b 7f       	andi	r24, 0xFB	; 251
 3dc:	83 bf       	out	0x33, r24	; 51
 3de:	08 95       	ret
 3e0:	88 30       	cpi	r24, 0x08	; 8
 3e2:	91 05       	cpc	r25, r1
 3e4:	51 f4       	brne	.+20     	; 0x3fa <adjustPrescalarT0+0x34>
 3e6:	83 b7       	in	r24, 0x33	; 51
 3e8:	8e 7f       	andi	r24, 0xFE	; 254
 3ea:	83 bf       	out	0x33, r24	; 51
 3ec:	83 b7       	in	r24, 0x33	; 51
 3ee:	82 60       	ori	r24, 0x02	; 2
 3f0:	83 bf       	out	0x33, r24	; 51
 3f2:	83 b7       	in	r24, 0x33	; 51
 3f4:	8b 7f       	andi	r24, 0xFB	; 251
 3f6:	83 bf       	out	0x33, r24	; 51
 3f8:	08 95       	ret
 3fa:	80 34       	cpi	r24, 0x40	; 64
 3fc:	91 05       	cpc	r25, r1
 3fe:	51 f4       	brne	.+20     	; 0x414 <__EEPROM_REGION_LENGTH__+0x14>
 400:	83 b7       	in	r24, 0x33	; 51
 402:	81 60       	ori	r24, 0x01	; 1
 404:	83 bf       	out	0x33, r24	; 51
 406:	83 b7       	in	r24, 0x33	; 51
 408:	82 60       	ori	r24, 0x02	; 2
 40a:	83 bf       	out	0x33, r24	; 51
 40c:	83 b7       	in	r24, 0x33	; 51
 40e:	8b 7f       	andi	r24, 0xFB	; 251
 410:	83 bf       	out	0x33, r24	; 51
 412:	08 95       	ret
 414:	81 15       	cp	r24, r1
 416:	21 e0       	ldi	r18, 0x01	; 1
 418:	92 07       	cpc	r25, r18
 41a:	51 f4       	brne	.+20     	; 0x430 <__EEPROM_REGION_LENGTH__+0x30>
 41c:	83 b7       	in	r24, 0x33	; 51
 41e:	8e 7f       	andi	r24, 0xFE	; 254
 420:	83 bf       	out	0x33, r24	; 51
 422:	83 b7       	in	r24, 0x33	; 51
 424:	8d 7f       	andi	r24, 0xFD	; 253
 426:	83 bf       	out	0x33, r24	; 51
 428:	83 b7       	in	r24, 0x33	; 51
 42a:	84 60       	ori	r24, 0x04	; 4
 42c:	83 bf       	out	0x33, r24	; 51
 42e:	08 95       	ret
 430:	81 15       	cp	r24, r1
 432:	94 40       	sbci	r25, 0x04	; 4
 434:	49 f4       	brne	.+18     	; 0x448 <__EEPROM_REGION_LENGTH__+0x48>
 436:	83 b7       	in	r24, 0x33	; 51
 438:	81 60       	ori	r24, 0x01	; 1
 43a:	83 bf       	out	0x33, r24	; 51
 43c:	83 b7       	in	r24, 0x33	; 51
 43e:	8d 7f       	andi	r24, 0xFD	; 253
 440:	83 bf       	out	0x33, r24	; 51
 442:	83 b7       	in	r24, 0x33	; 51
 444:	84 60       	ori	r24, 0x04	; 4
 446:	83 bf       	out	0x33, r24	; 51
 448:	08 95       	ret

0000044a <adjustPrescalarT1>:
 44a:	81 30       	cpi	r24, 0x01	; 1
 44c:	91 05       	cpc	r25, r1
 44e:	51 f4       	brne	.+20     	; 0x464 <adjustPrescalarT1+0x1a>
 450:	8e b5       	in	r24, 0x2e	; 46
 452:	81 60       	ori	r24, 0x01	; 1
 454:	8e bd       	out	0x2e, r24	; 46
 456:	8e b5       	in	r24, 0x2e	; 46
 458:	8d 7f       	andi	r24, 0xFD	; 253
 45a:	8e bd       	out	0x2e, r24	; 46
 45c:	8e b5       	in	r24, 0x2e	; 46
 45e:	8b 7f       	andi	r24, 0xFB	; 251
 460:	8e bd       	out	0x2e, r24	; 46
 462:	08 95       	ret
 464:	88 30       	cpi	r24, 0x08	; 8
 466:	91 05       	cpc	r25, r1
 468:	51 f4       	brne	.+20     	; 0x47e <adjustPrescalarT1+0x34>
 46a:	8e b5       	in	r24, 0x2e	; 46
 46c:	8e 7f       	andi	r24, 0xFE	; 254
 46e:	8e bd       	out	0x2e, r24	; 46
 470:	8e b5       	in	r24, 0x2e	; 46
 472:	82 60       	ori	r24, 0x02	; 2
 474:	8e bd       	out	0x2e, r24	; 46
 476:	8e b5       	in	r24, 0x2e	; 46
 478:	8b 7f       	andi	r24, 0xFB	; 251
 47a:	8e bd       	out	0x2e, r24	; 46
 47c:	08 95       	ret
 47e:	80 34       	cpi	r24, 0x40	; 64
 480:	91 05       	cpc	r25, r1
 482:	51 f4       	brne	.+20     	; 0x498 <adjustPrescalarT1+0x4e>
 484:	8e b5       	in	r24, 0x2e	; 46
 486:	81 60       	ori	r24, 0x01	; 1
 488:	8e bd       	out	0x2e, r24	; 46
 48a:	8e b5       	in	r24, 0x2e	; 46
 48c:	82 60       	ori	r24, 0x02	; 2
 48e:	8e bd       	out	0x2e, r24	; 46
 490:	8e b5       	in	r24, 0x2e	; 46
 492:	8b 7f       	andi	r24, 0xFB	; 251
 494:	8e bd       	out	0x2e, r24	; 46
 496:	08 95       	ret
 498:	81 15       	cp	r24, r1
 49a:	21 e0       	ldi	r18, 0x01	; 1
 49c:	92 07       	cpc	r25, r18
 49e:	51 f4       	brne	.+20     	; 0x4b4 <adjustPrescalarT1+0x6a>
 4a0:	8e b5       	in	r24, 0x2e	; 46
 4a2:	8e 7f       	andi	r24, 0xFE	; 254
 4a4:	8e bd       	out	0x2e, r24	; 46
 4a6:	8e b5       	in	r24, 0x2e	; 46
 4a8:	8d 7f       	andi	r24, 0xFD	; 253
 4aa:	8e bd       	out	0x2e, r24	; 46
 4ac:	8e b5       	in	r24, 0x2e	; 46
 4ae:	84 60       	ori	r24, 0x04	; 4
 4b0:	8e bd       	out	0x2e, r24	; 46
 4b2:	08 95       	ret
 4b4:	81 15       	cp	r24, r1
 4b6:	94 40       	sbci	r25, 0x04	; 4
 4b8:	49 f4       	brne	.+18     	; 0x4cc <adjustPrescalarT1+0x82>
 4ba:	8e b5       	in	r24, 0x2e	; 46
 4bc:	81 60       	ori	r24, 0x01	; 1
 4be:	8e bd       	out	0x2e, r24	; 46
 4c0:	8e b5       	in	r24, 0x2e	; 46
 4c2:	8d 7f       	andi	r24, 0xFD	; 253
 4c4:	8e bd       	out	0x2e, r24	; 46
 4c6:	8e b5       	in	r24, 0x2e	; 46
 4c8:	84 60       	ori	r24, 0x04	; 4
 4ca:	8e bd       	out	0x2e, r24	; 46
 4cc:	08 95       	ret

000004ce <Timer_init>:
 4ce:	cf 93       	push	r28
 4d0:	df 93       	push	r29
 4d2:	00 d0       	rcall	.+0      	; 0x4d4 <Timer_init+0x6>
 4d4:	00 d0       	rcall	.+0      	; 0x4d6 <Timer_init+0x8>
 4d6:	00 d0       	rcall	.+0      	; 0x4d8 <Timer_init+0xa>
 4d8:	cd b7       	in	r28, 0x3d	; 61
 4da:	de b7       	in	r29, 0x3e	; 62
 4dc:	49 83       	std	Y+1, r20	; 0x01
 4de:	5a 83       	std	Y+2, r21	; 0x02
 4e0:	6b 83       	std	Y+3, r22	; 0x03
 4e2:	7c 83       	std	Y+4, r23	; 0x04
 4e4:	8d 83       	std	Y+5, r24	; 0x05
 4e6:	9e 83       	std	Y+6, r25	; 0x06
 4e8:	91 11       	cpse	r25, r1
 4ea:	04 c0       	rjmp	.+8      	; 0x4f4 <Timer_init+0x26>
 4ec:	e4 2f       	mov	r30, r20
 4ee:	f0 e0       	ldi	r31, 0x00	; 0
 4f0:	10 82       	st	Z, r1
 4f2:	23 c0       	rjmp	.+70     	; 0x53a <Timer_init+0x6c>
 4f4:	91 30       	cpi	r25, 0x01	; 1
 4f6:	89 f4       	brne	.+34     	; 0x51a <Timer_init+0x4c>
 4f8:	89 81       	ldd	r24, Y+1	; 0x01
 4fa:	83 35       	cpi	r24, 0x53	; 83
 4fc:	19 f4       	brne	.+6      	; 0x504 <Timer_init+0x36>
 4fe:	87 b3       	in	r24, 0x17	; 23
 500:	88 60       	ori	r24, 0x08	; 8
 502:	87 bb       	out	0x17, r24	; 23
 504:	89 81       	ldd	r24, Y+1	; 0x01
 506:	85 34       	cpi	r24, 0x45	; 69
 508:	19 f4       	brne	.+6      	; 0x510 <Timer_init+0x42>
 50a:	81 b3       	in	r24, 0x11	; 17
 50c:	80 68       	ori	r24, 0x80	; 128
 50e:	81 bb       	out	0x11, r24	; 17
 510:	e9 81       	ldd	r30, Y+1	; 0x01
 512:	f0 e0       	ldi	r31, 0x00	; 0
 514:	89 e6       	ldi	r24, 0x69	; 105
 516:	80 83       	st	Z, r24
 518:	10 c0       	rjmp	.+32     	; 0x53a <Timer_init+0x6c>
 51a:	92 30       	cpi	r25, 0x02	; 2
 51c:	71 f4       	brne	.+28     	; 0x53a <Timer_init+0x6c>
 51e:	e9 81       	ldd	r30, Y+1	; 0x01
 520:	ef 34       	cpi	r30, 0x4F	; 79
 522:	41 f4       	brne	.+16     	; 0x534 <Timer_init+0x66>
 524:	1f bc       	out	0x2f, r1	; 47
 526:	8e b5       	in	r24, 0x2e	; 46
 528:	88 60       	ori	r24, 0x08	; 8
 52a:	8e bd       	out	0x2e, r24	; 46
 52c:	8e b5       	in	r24, 0x2e	; 46
 52e:	8f 7e       	andi	r24, 0xEF	; 239
 530:	8e bd       	out	0x2e, r24	; 46
 532:	03 c0       	rjmp	.+6      	; 0x53a <Timer_init+0x6c>
 534:	f0 e0       	ldi	r31, 0x00	; 0
 536:	88 e0       	ldi	r24, 0x08	; 8
 538:	80 83       	st	Z, r24
 53a:	80 e4       	ldi	r24, 0x40	; 64
 53c:	90 e0       	ldi	r25, 0x00	; 0
 53e:	0e 94 25 02 	call	0x44a	; 0x44a <adjustPrescalarT1>
 542:	26 96       	adiw	r28, 0x06	; 6
 544:	0f b6       	in	r0, 0x3f	; 63
 546:	f8 94       	cli
 548:	de bf       	out	0x3e, r29	; 62
 54a:	0f be       	out	0x3f, r0	; 63
 54c:	cd bf       	out	0x3d, r28	; 61
 54e:	df 91       	pop	r29
 550:	cf 91       	pop	r28
 552:	08 95       	ret

00000554 <Timer_Delay>:
 554:	4f 92       	push	r4
 556:	5f 92       	push	r5
 558:	6f 92       	push	r6
 55a:	7f 92       	push	r7
 55c:	8f 92       	push	r8
 55e:	9f 92       	push	r9
 560:	af 92       	push	r10
 562:	bf 92       	push	r11
 564:	ef 92       	push	r14
 566:	ff 92       	push	r15
 568:	0f 93       	push	r16
 56a:	1f 93       	push	r17
 56c:	cf 93       	push	r28
 56e:	df 93       	push	r29
 570:	cd b7       	in	r28, 0x3d	; 61
 572:	de b7       	in	r29, 0x3e	; 62
 574:	2a 97       	sbiw	r28, 0x0a	; 10
 576:	0f b6       	in	r0, 0x3f	; 63
 578:	f8 94       	cli
 57a:	de bf       	out	0x3e, r29	; 62
 57c:	0f be       	out	0x3f, r0	; 63
 57e:	cd bf       	out	0x3d, r28	; 61
 580:	4b 01       	movw	r8, r22
 582:	5c 01       	movw	r10, r24
 584:	09 83       	std	Y+1, r16	; 0x01
 586:	1a 83       	std	Y+2, r17	; 0x02
 588:	2b 83       	std	Y+3, r18	; 0x03
 58a:	3c 83       	std	Y+4, r19	; 0x04
 58c:	4d 83       	std	Y+5, r20	; 0x05
 58e:	5e 83       	std	Y+6, r21	; 0x06
 590:	03 35       	cpi	r16, 0x53	; 83
 592:	09 f0       	breq	.+2      	; 0x596 <Timer_Delay+0x42>
 594:	71 c0       	rjmp	.+226    	; 0x678 <Timer_Delay+0x124>
 596:	37 c0       	rjmp	.+110    	; 0x606 <Timer_Delay+0xb2>
 598:	6a 81       	ldd	r22, Y+2	; 0x02
 59a:	7b 81       	ldd	r23, Y+3	; 0x03
 59c:	8c 81       	ldd	r24, Y+4	; 0x04
 59e:	9d 81       	ldd	r25, Y+5	; 0x05
 5a0:	e1 2f       	mov	r30, r17
 5a2:	f0 e0       	ldi	r31, 0x00	; 0
 5a4:	ee 0f       	add	r30, r30
 5a6:	ff 1f       	adc	r31, r31
 5a8:	ea 59       	subi	r30, 0x9A	; 154
 5aa:	ff 4f       	sbci	r31, 0xFF	; 255
 5ac:	e0 80       	ld	r14, Z
 5ae:	f1 80       	ldd	r15, Z+1	; 0x01
 5b0:	97 01       	movw	r18, r14
 5b2:	40 e0       	ldi	r20, 0x00	; 0
 5b4:	50 e0       	ldi	r21, 0x00	; 0
 5b6:	0e 94 47 06 	call	0xc8e	; 0xc8e <__udivmodsi4>
 5ba:	84 2f       	mov	r24, r20
 5bc:	95 2f       	mov	r25, r21
 5be:	42 2e       	mov	r4, r18
 5c0:	53 2e       	mov	r5, r19
 5c2:	64 2e       	mov	r6, r20
 5c4:	75 2e       	mov	r7, r21
 5c6:	62 2f       	mov	r22, r18
 5c8:	73 2f       	mov	r23, r19
 5ca:	0e 94 28 05 	call	0xa50	; 0xa50 <__floatunsisf>
 5ce:	6f 83       	std	Y+7, r22	; 0x07
 5d0:	78 87       	std	Y+8, r23	; 0x08
 5d2:	89 87       	std	Y+9, r24	; 0x09
 5d4:	9a 87       	std	Y+10, r25	; 0x0a
 5d6:	a5 01       	movw	r20, r10
 5d8:	94 01       	movw	r18, r8
 5da:	60 e0       	ldi	r22, 0x00	; 0
 5dc:	70 e0       	ldi	r23, 0x00	; 0
 5de:	8f e7       	ldi	r24, 0x7F	; 127
 5e0:	93 e4       	ldi	r25, 0x43	; 67
 5e2:	0e 94 80 04 	call	0x900	; 0x900 <__divsf3>
 5e6:	9b 01       	movw	r18, r22
 5e8:	ac 01       	movw	r20, r24
 5ea:	6f 81       	ldd	r22, Y+7	; 0x07
 5ec:	78 85       	ldd	r23, Y+8	; 0x08
 5ee:	89 85       	ldd	r24, Y+9	; 0x09
 5f0:	9a 85       	ldd	r25, Y+10	; 0x0a
 5f2:	0e 94 7b 04 	call	0x8f6	; 0x8f6 <__cmpsf2>
 5f6:	88 23       	and	r24, r24
 5f8:	24 f4       	brge	.+8      	; 0x602 <Timer_Delay+0xae>
 5fa:	45 28       	or	r4, r5
 5fc:	46 28       	or	r4, r6
 5fe:	47 28       	or	r4, r7
 600:	49 f4       	brne	.+18     	; 0x614 <Timer_Delay+0xc0>
 602:	1f 5f       	subi	r17, 0xFF	; 255
 604:	01 c0       	rjmp	.+2      	; 0x608 <Timer_Delay+0xb4>
 606:	10 e0       	ldi	r17, 0x00	; 0
 608:	15 30       	cpi	r17, 0x05	; 5
 60a:	30 f2       	brcs	.-116    	; 0x598 <Timer_Delay+0x44>
 60c:	01 e0       	ldi	r16, 0x01	; 1
 60e:	10 e0       	ldi	r17, 0x00	; 0
 610:	80 e0       	ldi	r24, 0x00	; 0
 612:	02 c0       	rjmp	.+4      	; 0x618 <Timer_Delay+0xc4>
 614:	87 01       	movw	r16, r14
 616:	81 e0       	ldi	r24, 0x01	; 1
 618:	88 23       	and	r24, r24
 61a:	09 f4       	brne	.+2      	; 0x61e <Timer_Delay+0xca>
 61c:	72 c0       	rjmp	.+228    	; 0x702 <Timer_Delay+0x1ae>
 61e:	c8 01       	movw	r24, r16
 620:	0e 94 e3 01 	call	0x3c6	; 0x3c6 <adjustPrescalarT0>
 624:	6a 81       	ldd	r22, Y+2	; 0x02
 626:	7b 81       	ldd	r23, Y+3	; 0x03
 628:	8c 81       	ldd	r24, Y+4	; 0x04
 62a:	9d 81       	ldd	r25, Y+5	; 0x05
 62c:	0e 94 28 05 	call	0xa50	; 0xa50 <__floatunsisf>
 630:	a5 01       	movw	r20, r10
 632:	94 01       	movw	r18, r8
 634:	0e 94 da 05 	call	0xbb4	; 0xbb4 <__mulsf3>
 638:	4b 01       	movw	r8, r22
 63a:	5c 01       	movw	r10, r24
 63c:	b8 01       	movw	r22, r16
 63e:	80 e0       	ldi	r24, 0x00	; 0
 640:	90 e0       	ldi	r25, 0x00	; 0
 642:	0e 94 28 05 	call	0xa50	; 0xa50 <__floatunsisf>
 646:	9b 01       	movw	r18, r22
 648:	ac 01       	movw	r20, r24
 64a:	c5 01       	movw	r24, r10
 64c:	b4 01       	movw	r22, r8
 64e:	0e 94 80 04 	call	0x900	; 0x900 <__divsf3>
 652:	9b 01       	movw	r18, r22
 654:	ac 01       	movw	r20, r24
 656:	60 e0       	ldi	r22, 0x00	; 0
 658:	70 e0       	ldi	r23, 0x00	; 0
 65a:	8f e7       	ldi	r24, 0x7F	; 127
 65c:	93 e4       	ldi	r25, 0x43	; 67
 65e:	0e 94 0e 04 	call	0x81c	; 0x81c <__subsf3>
 662:	0e 94 f2 04 	call	0x9e4	; 0x9e4 <__fixsfsi>
 666:	62 bf       	out	0x32, r22	; 50
 668:	08 b6       	in	r0, 0x38	; 56
 66a:	00 fe       	sbrs	r0, 0
 66c:	fd cf       	rjmp	.-6      	; 0x668 <Timer_Delay+0x114>
 66e:	88 b7       	in	r24, 0x38	; 56
 670:	81 60       	ori	r24, 0x01	; 1
 672:	88 bf       	out	0x38, r24	; 56
 674:	81 e0       	ldi	r24, 0x01	; 1
 676:	48 c0       	rjmp	.+144    	; 0x708 <Timer_Delay+0x1b4>
 678:	0f 34       	cpi	r16, 0x4F	; 79
 67a:	09 f0       	breq	.+2      	; 0x67e <Timer_Delay+0x12a>
 67c:	44 c0       	rjmp	.+136    	; 0x706 <Timer_Delay+0x1b2>
 67e:	6a 81       	ldd	r22, Y+2	; 0x02
 680:	7b 81       	ldd	r23, Y+3	; 0x03
 682:	8c 81       	ldd	r24, Y+4	; 0x04
 684:	9d 81       	ldd	r25, Y+5	; 0x05
 686:	0e 94 28 05 	call	0xa50	; 0xa50 <__floatunsisf>
 68a:	a5 01       	movw	r20, r10
 68c:	94 01       	movw	r18, r8
 68e:	0e 94 da 05 	call	0xbb4	; 0xbb4 <__mulsf3>
 692:	20 e0       	ldi	r18, 0x00	; 0
 694:	30 e0       	ldi	r19, 0x00	; 0
 696:	40 e8       	ldi	r20, 0x80	; 128
 698:	5c e3       	ldi	r21, 0x3C	; 60
 69a:	0e 94 da 05 	call	0xbb4	; 0xbb4 <__mulsf3>
 69e:	9b 01       	movw	r18, r22
 6a0:	ac 01       	movw	r20, r24
 6a2:	60 e0       	ldi	r22, 0x00	; 0
 6a4:	70 e0       	ldi	r23, 0x00	; 0
 6a6:	80 e8       	ldi	r24, 0x80	; 128
 6a8:	97 e4       	ldi	r25, 0x47	; 71
 6aa:	0e 94 0e 04 	call	0x81c	; 0x81c <__subsf3>
 6ae:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <__fixunssfsi>
 6b2:	7d bd       	out	0x2d, r23	; 45
 6b4:	6a 81       	ldd	r22, Y+2	; 0x02
 6b6:	7b 81       	ldd	r23, Y+3	; 0x03
 6b8:	8c 81       	ldd	r24, Y+4	; 0x04
 6ba:	9d 81       	ldd	r25, Y+5	; 0x05
 6bc:	0e 94 28 05 	call	0xa50	; 0xa50 <__floatunsisf>
 6c0:	a5 01       	movw	r20, r10
 6c2:	94 01       	movw	r18, r8
 6c4:	0e 94 da 05 	call	0xbb4	; 0xbb4 <__mulsf3>
 6c8:	20 e0       	ldi	r18, 0x00	; 0
 6ca:	30 e0       	ldi	r19, 0x00	; 0
 6cc:	40 e8       	ldi	r20, 0x80	; 128
 6ce:	5c e3       	ldi	r21, 0x3C	; 60
 6d0:	0e 94 da 05 	call	0xbb4	; 0xbb4 <__mulsf3>
 6d4:	9b 01       	movw	r18, r22
 6d6:	ac 01       	movw	r20, r24
 6d8:	60 e0       	ldi	r22, 0x00	; 0
 6da:	70 e0       	ldi	r23, 0x00	; 0
 6dc:	80 e8       	ldi	r24, 0x80	; 128
 6de:	97 e4       	ldi	r25, 0x47	; 71
 6e0:	0e 94 0e 04 	call	0x81c	; 0x81c <__subsf3>
 6e4:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <__fixunssfsi>
 6e8:	21 e0       	ldi	r18, 0x01	; 1
 6ea:	67 2b       	or	r22, r23
 6ec:	09 f4       	brne	.+2      	; 0x6f0 <Timer_Delay+0x19c>
 6ee:	20 e0       	ldi	r18, 0x00	; 0
 6f0:	2c bd       	out	0x2c, r18	; 44
 6f2:	08 b6       	in	r0, 0x38	; 56
 6f4:	02 fe       	sbrs	r0, 2
 6f6:	fd cf       	rjmp	.-6      	; 0x6f2 <Timer_Delay+0x19e>
 6f8:	88 b7       	in	r24, 0x38	; 56
 6fa:	84 60       	ori	r24, 0x04	; 4
 6fc:	88 bf       	out	0x38, r24	; 56
 6fe:	81 e0       	ldi	r24, 0x01	; 1
 700:	03 c0       	rjmp	.+6      	; 0x708 <Timer_Delay+0x1b4>
 702:	80 e0       	ldi	r24, 0x00	; 0
 704:	01 c0       	rjmp	.+2      	; 0x708 <Timer_Delay+0x1b4>
 706:	80 e0       	ldi	r24, 0x00	; 0
 708:	2a 96       	adiw	r28, 0x0a	; 10
 70a:	0f b6       	in	r0, 0x3f	; 63
 70c:	f8 94       	cli
 70e:	de bf       	out	0x3e, r29	; 62
 710:	0f be       	out	0x3f, r0	; 63
 712:	cd bf       	out	0x3d, r28	; 61
 714:	df 91       	pop	r29
 716:	cf 91       	pop	r28
 718:	1f 91       	pop	r17
 71a:	0f 91       	pop	r16
 71c:	ff 90       	pop	r15
 71e:	ef 90       	pop	r14
 720:	bf 90       	pop	r11
 722:	af 90       	pop	r10
 724:	9f 90       	pop	r9
 726:	8f 90       	pop	r8
 728:	7f 90       	pop	r7
 72a:	6f 90       	pop	r6
 72c:	5f 90       	pop	r5
 72e:	4f 90       	pop	r4
 730:	08 95       	ret

00000732 <__vector_10>:
}


/* ISR DEFINITIONS */

void __vector_10(){
 732:	1f 92       	push	r1
 734:	0f 92       	push	r0
 736:	0f b6       	in	r0, 0x3f	; 63
 738:	0f 92       	push	r0
 73a:	11 24       	eor	r1, r1
 73c:	2f 93       	push	r18
 73e:	3f 93       	push	r19
 740:	4f 93       	push	r20
 742:	5f 93       	push	r21
 744:	6f 93       	push	r22
 746:	7f 93       	push	r23
 748:	8f 93       	push	r24
 74a:	9f 93       	push	r25
 74c:	af 93       	push	r26
 74e:	bf 93       	push	r27
 750:	ef 93       	push	r30
 752:	ff 93       	push	r31
	TIMER0_CM_ISR();
 754:	e0 91 70 00 	lds	r30, 0x0070	; 0x800070 <__data_end>
 758:	f0 91 71 00 	lds	r31, 0x0071	; 0x800071 <__data_end+0x1>
 75c:	09 95       	icall
}
 75e:	ff 91       	pop	r31
 760:	ef 91       	pop	r30
 762:	bf 91       	pop	r27
 764:	af 91       	pop	r26
 766:	9f 91       	pop	r25
 768:	8f 91       	pop	r24
 76a:	7f 91       	pop	r23
 76c:	6f 91       	pop	r22
 76e:	5f 91       	pop	r21
 770:	4f 91       	pop	r20
 772:	3f 91       	pop	r19
 774:	2f 91       	pop	r18
 776:	0f 90       	pop	r0
 778:	0f be       	out	0x3f, r0	; 63
 77a:	0f 90       	pop	r0
 77c:	1f 90       	pop	r1
 77e:	18 95       	reti

00000780 <__vector_7>:

void __vector_7(){
 780:	1f 92       	push	r1
 782:	0f 92       	push	r0
 784:	0f b6       	in	r0, 0x3f	; 63
 786:	0f 92       	push	r0
 788:	11 24       	eor	r1, r1
 78a:	2f 93       	push	r18
 78c:	3f 93       	push	r19
 78e:	4f 93       	push	r20
 790:	5f 93       	push	r21
 792:	6f 93       	push	r22
 794:	7f 93       	push	r23
 796:	8f 93       	push	r24
 798:	9f 93       	push	r25
 79a:	af 93       	push	r26
 79c:	bf 93       	push	r27
 79e:	ef 93       	push	r30
 7a0:	ff 93       	push	r31
	TIMER1_CMA_ISR();
 7a2:	e0 91 74 00 	lds	r30, 0x0074	; 0x800074 <TIMER1_CMA_ISR>
 7a6:	f0 91 75 00 	lds	r31, 0x0075	; 0x800075 <TIMER1_CMA_ISR+0x1>
 7aa:	09 95       	icall
}
 7ac:	ff 91       	pop	r31
 7ae:	ef 91       	pop	r30
 7b0:	bf 91       	pop	r27
 7b2:	af 91       	pop	r26
 7b4:	9f 91       	pop	r25
 7b6:	8f 91       	pop	r24
 7b8:	7f 91       	pop	r23
 7ba:	6f 91       	pop	r22
 7bc:	5f 91       	pop	r21
 7be:	4f 91       	pop	r20
 7c0:	3f 91       	pop	r19
 7c2:	2f 91       	pop	r18
 7c4:	0f 90       	pop	r0
 7c6:	0f be       	out	0x3f, r0	; 63
 7c8:	0f 90       	pop	r0
 7ca:	1f 90       	pop	r1
 7cc:	18 95       	reti

000007ce <__vector_4>:

void __vector_4(){
 7ce:	1f 92       	push	r1
 7d0:	0f 92       	push	r0
 7d2:	0f b6       	in	r0, 0x3f	; 63
 7d4:	0f 92       	push	r0
 7d6:	11 24       	eor	r1, r1
 7d8:	2f 93       	push	r18
 7da:	3f 93       	push	r19
 7dc:	4f 93       	push	r20
 7de:	5f 93       	push	r21
 7e0:	6f 93       	push	r22
 7e2:	7f 93       	push	r23
 7e4:	8f 93       	push	r24
 7e6:	9f 93       	push	r25
 7e8:	af 93       	push	r26
 7ea:	bf 93       	push	r27
 7ec:	ef 93       	push	r30
 7ee:	ff 93       	push	r31
	TIMER2_CM_ISR();
 7f0:	e0 91 72 00 	lds	r30, 0x0072	; 0x800072 <TIMER2_CM_ISR>
 7f4:	f0 91 73 00 	lds	r31, 0x0073	; 0x800073 <TIMER2_CM_ISR+0x1>
 7f8:	09 95       	icall
}
 7fa:	ff 91       	pop	r31
 7fc:	ef 91       	pop	r30
 7fe:	bf 91       	pop	r27
 800:	af 91       	pop	r26
 802:	9f 91       	pop	r25
 804:	8f 91       	pop	r24
 806:	7f 91       	pop	r23
 808:	6f 91       	pop	r22
 80a:	5f 91       	pop	r21
 80c:	4f 91       	pop	r20
 80e:	3f 91       	pop	r19
 810:	2f 91       	pop	r18
 812:	0f 90       	pop	r0
 814:	0f be       	out	0x3f, r0	; 63
 816:	0f 90       	pop	r0
 818:	1f 90       	pop	r1
 81a:	18 95       	reti

0000081c <__subsf3>:
 81c:	50 58       	subi	r21, 0x80	; 128

0000081e <__addsf3>:
 81e:	bb 27       	eor	r27, r27
 820:	aa 27       	eor	r26, r26
 822:	0e 94 26 04 	call	0x84c	; 0x84c <__addsf3x>
 826:	0c 94 a0 05 	jmp	0xb40	; 0xb40 <__fp_round>
 82a:	0e 94 92 05 	call	0xb24	; 0xb24 <__fp_pscA>
 82e:	38 f0       	brcs	.+14     	; 0x83e <__addsf3+0x20>
 830:	0e 94 99 05 	call	0xb32	; 0xb32 <__fp_pscB>
 834:	20 f0       	brcs	.+8      	; 0x83e <__addsf3+0x20>
 836:	39 f4       	brne	.+14     	; 0x846 <__addsf3+0x28>
 838:	9f 3f       	cpi	r25, 0xFF	; 255
 83a:	19 f4       	brne	.+6      	; 0x842 <__addsf3+0x24>
 83c:	26 f4       	brtc	.+8      	; 0x846 <__addsf3+0x28>
 83e:	0c 94 8f 05 	jmp	0xb1e	; 0xb1e <__fp_nan>
 842:	0e f4       	brtc	.+2      	; 0x846 <__addsf3+0x28>
 844:	e0 95       	com	r30
 846:	e7 fb       	bst	r30, 7
 848:	0c 94 89 05 	jmp	0xb12	; 0xb12 <__fp_inf>

0000084c <__addsf3x>:
 84c:	e9 2f       	mov	r30, r25
 84e:	0e 94 b1 05 	call	0xb62	; 0xb62 <__fp_split3>
 852:	58 f3       	brcs	.-42     	; 0x82a <__addsf3+0xc>
 854:	ba 17       	cp	r27, r26
 856:	62 07       	cpc	r22, r18
 858:	73 07       	cpc	r23, r19
 85a:	84 07       	cpc	r24, r20
 85c:	95 07       	cpc	r25, r21
 85e:	20 f0       	brcs	.+8      	; 0x868 <__stack+0x9>
 860:	79 f4       	brne	.+30     	; 0x880 <__stack+0x21>
 862:	a6 f5       	brtc	.+104    	; 0x8cc <__stack+0x6d>
 864:	0c 94 d3 05 	jmp	0xba6	; 0xba6 <__fp_zero>
 868:	0e f4       	brtc	.+2      	; 0x86c <__stack+0xd>
 86a:	e0 95       	com	r30
 86c:	0b 2e       	mov	r0, r27
 86e:	ba 2f       	mov	r27, r26
 870:	a0 2d       	mov	r26, r0
 872:	0b 01       	movw	r0, r22
 874:	b9 01       	movw	r22, r18
 876:	90 01       	movw	r18, r0
 878:	0c 01       	movw	r0, r24
 87a:	ca 01       	movw	r24, r20
 87c:	a0 01       	movw	r20, r0
 87e:	11 24       	eor	r1, r1
 880:	ff 27       	eor	r31, r31
 882:	59 1b       	sub	r21, r25
 884:	99 f0       	breq	.+38     	; 0x8ac <__stack+0x4d>
 886:	59 3f       	cpi	r21, 0xF9	; 249
 888:	50 f4       	brcc	.+20     	; 0x89e <__stack+0x3f>
 88a:	50 3e       	cpi	r21, 0xE0	; 224
 88c:	68 f1       	brcs	.+90     	; 0x8e8 <__stack+0x89>
 88e:	1a 16       	cp	r1, r26
 890:	f0 40       	sbci	r31, 0x00	; 0
 892:	a2 2f       	mov	r26, r18
 894:	23 2f       	mov	r18, r19
 896:	34 2f       	mov	r19, r20
 898:	44 27       	eor	r20, r20
 89a:	58 5f       	subi	r21, 0xF8	; 248
 89c:	f3 cf       	rjmp	.-26     	; 0x884 <__stack+0x25>
 89e:	46 95       	lsr	r20
 8a0:	37 95       	ror	r19
 8a2:	27 95       	ror	r18
 8a4:	a7 95       	ror	r26
 8a6:	f0 40       	sbci	r31, 0x00	; 0
 8a8:	53 95       	inc	r21
 8aa:	c9 f7       	brne	.-14     	; 0x89e <__stack+0x3f>
 8ac:	7e f4       	brtc	.+30     	; 0x8cc <__stack+0x6d>
 8ae:	1f 16       	cp	r1, r31
 8b0:	ba 0b       	sbc	r27, r26
 8b2:	62 0b       	sbc	r22, r18
 8b4:	73 0b       	sbc	r23, r19
 8b6:	84 0b       	sbc	r24, r20
 8b8:	ba f0       	brmi	.+46     	; 0x8e8 <__stack+0x89>
 8ba:	91 50       	subi	r25, 0x01	; 1
 8bc:	a1 f0       	breq	.+40     	; 0x8e6 <__stack+0x87>
 8be:	ff 0f       	add	r31, r31
 8c0:	bb 1f       	adc	r27, r27
 8c2:	66 1f       	adc	r22, r22
 8c4:	77 1f       	adc	r23, r23
 8c6:	88 1f       	adc	r24, r24
 8c8:	c2 f7       	brpl	.-16     	; 0x8ba <__stack+0x5b>
 8ca:	0e c0       	rjmp	.+28     	; 0x8e8 <__stack+0x89>
 8cc:	ba 0f       	add	r27, r26
 8ce:	62 1f       	adc	r22, r18
 8d0:	73 1f       	adc	r23, r19
 8d2:	84 1f       	adc	r24, r20
 8d4:	48 f4       	brcc	.+18     	; 0x8e8 <__stack+0x89>
 8d6:	87 95       	ror	r24
 8d8:	77 95       	ror	r23
 8da:	67 95       	ror	r22
 8dc:	b7 95       	ror	r27
 8de:	f7 95       	ror	r31
 8e0:	9e 3f       	cpi	r25, 0xFE	; 254
 8e2:	08 f0       	brcs	.+2      	; 0x8e6 <__stack+0x87>
 8e4:	b0 cf       	rjmp	.-160    	; 0x846 <__addsf3+0x28>
 8e6:	93 95       	inc	r25
 8e8:	88 0f       	add	r24, r24
 8ea:	08 f0       	brcs	.+2      	; 0x8ee <__stack+0x8f>
 8ec:	99 27       	eor	r25, r25
 8ee:	ee 0f       	add	r30, r30
 8f0:	97 95       	ror	r25
 8f2:	87 95       	ror	r24
 8f4:	08 95       	ret

000008f6 <__cmpsf2>:
 8f6:	0e 94 65 05 	call	0xaca	; 0xaca <__fp_cmp>
 8fa:	08 f4       	brcc	.+2      	; 0x8fe <__cmpsf2+0x8>
 8fc:	81 e0       	ldi	r24, 0x01	; 1
 8fe:	08 95       	ret

00000900 <__divsf3>:
 900:	0e 94 94 04 	call	0x928	; 0x928 <__divsf3x>
 904:	0c 94 a0 05 	jmp	0xb40	; 0xb40 <__fp_round>
 908:	0e 94 99 05 	call	0xb32	; 0xb32 <__fp_pscB>
 90c:	58 f0       	brcs	.+22     	; 0x924 <__divsf3+0x24>
 90e:	0e 94 92 05 	call	0xb24	; 0xb24 <__fp_pscA>
 912:	40 f0       	brcs	.+16     	; 0x924 <__divsf3+0x24>
 914:	29 f4       	brne	.+10     	; 0x920 <__divsf3+0x20>
 916:	5f 3f       	cpi	r21, 0xFF	; 255
 918:	29 f0       	breq	.+10     	; 0x924 <__divsf3+0x24>
 91a:	0c 94 89 05 	jmp	0xb12	; 0xb12 <__fp_inf>
 91e:	51 11       	cpse	r21, r1
 920:	0c 94 d4 05 	jmp	0xba8	; 0xba8 <__fp_szero>
 924:	0c 94 8f 05 	jmp	0xb1e	; 0xb1e <__fp_nan>

00000928 <__divsf3x>:
 928:	0e 94 b1 05 	call	0xb62	; 0xb62 <__fp_split3>
 92c:	68 f3       	brcs	.-38     	; 0x908 <__divsf3+0x8>

0000092e <__divsf3_pse>:
 92e:	99 23       	and	r25, r25
 930:	b1 f3       	breq	.-20     	; 0x91e <__divsf3+0x1e>
 932:	55 23       	and	r21, r21
 934:	91 f3       	breq	.-28     	; 0x91a <__divsf3+0x1a>
 936:	95 1b       	sub	r25, r21
 938:	55 0b       	sbc	r21, r21
 93a:	bb 27       	eor	r27, r27
 93c:	aa 27       	eor	r26, r26
 93e:	62 17       	cp	r22, r18
 940:	73 07       	cpc	r23, r19
 942:	84 07       	cpc	r24, r20
 944:	38 f0       	brcs	.+14     	; 0x954 <__divsf3_pse+0x26>
 946:	9f 5f       	subi	r25, 0xFF	; 255
 948:	5f 4f       	sbci	r21, 0xFF	; 255
 94a:	22 0f       	add	r18, r18
 94c:	33 1f       	adc	r19, r19
 94e:	44 1f       	adc	r20, r20
 950:	aa 1f       	adc	r26, r26
 952:	a9 f3       	breq	.-22     	; 0x93e <__divsf3_pse+0x10>
 954:	35 d0       	rcall	.+106    	; 0x9c0 <__divsf3_pse+0x92>
 956:	0e 2e       	mov	r0, r30
 958:	3a f0       	brmi	.+14     	; 0x968 <__divsf3_pse+0x3a>
 95a:	e0 e8       	ldi	r30, 0x80	; 128
 95c:	32 d0       	rcall	.+100    	; 0x9c2 <__divsf3_pse+0x94>
 95e:	91 50       	subi	r25, 0x01	; 1
 960:	50 40       	sbci	r21, 0x00	; 0
 962:	e6 95       	lsr	r30
 964:	00 1c       	adc	r0, r0
 966:	ca f7       	brpl	.-14     	; 0x95a <__divsf3_pse+0x2c>
 968:	2b d0       	rcall	.+86     	; 0x9c0 <__divsf3_pse+0x92>
 96a:	fe 2f       	mov	r31, r30
 96c:	29 d0       	rcall	.+82     	; 0x9c0 <__divsf3_pse+0x92>
 96e:	66 0f       	add	r22, r22
 970:	77 1f       	adc	r23, r23
 972:	88 1f       	adc	r24, r24
 974:	bb 1f       	adc	r27, r27
 976:	26 17       	cp	r18, r22
 978:	37 07       	cpc	r19, r23
 97a:	48 07       	cpc	r20, r24
 97c:	ab 07       	cpc	r26, r27
 97e:	b0 e8       	ldi	r27, 0x80	; 128
 980:	09 f0       	breq	.+2      	; 0x984 <__divsf3_pse+0x56>
 982:	bb 0b       	sbc	r27, r27
 984:	80 2d       	mov	r24, r0
 986:	bf 01       	movw	r22, r30
 988:	ff 27       	eor	r31, r31
 98a:	93 58       	subi	r25, 0x83	; 131
 98c:	5f 4f       	sbci	r21, 0xFF	; 255
 98e:	3a f0       	brmi	.+14     	; 0x99e <__divsf3_pse+0x70>
 990:	9e 3f       	cpi	r25, 0xFE	; 254
 992:	51 05       	cpc	r21, r1
 994:	78 f0       	brcs	.+30     	; 0x9b4 <__divsf3_pse+0x86>
 996:	0c 94 89 05 	jmp	0xb12	; 0xb12 <__fp_inf>
 99a:	0c 94 d4 05 	jmp	0xba8	; 0xba8 <__fp_szero>
 99e:	5f 3f       	cpi	r21, 0xFF	; 255
 9a0:	e4 f3       	brlt	.-8      	; 0x99a <__divsf3_pse+0x6c>
 9a2:	98 3e       	cpi	r25, 0xE8	; 232
 9a4:	d4 f3       	brlt	.-12     	; 0x99a <__divsf3_pse+0x6c>
 9a6:	86 95       	lsr	r24
 9a8:	77 95       	ror	r23
 9aa:	67 95       	ror	r22
 9ac:	b7 95       	ror	r27
 9ae:	f7 95       	ror	r31
 9b0:	9f 5f       	subi	r25, 0xFF	; 255
 9b2:	c9 f7       	brne	.-14     	; 0x9a6 <__divsf3_pse+0x78>
 9b4:	88 0f       	add	r24, r24
 9b6:	91 1d       	adc	r25, r1
 9b8:	96 95       	lsr	r25
 9ba:	87 95       	ror	r24
 9bc:	97 f9       	bld	r25, 7
 9be:	08 95       	ret
 9c0:	e1 e0       	ldi	r30, 0x01	; 1
 9c2:	66 0f       	add	r22, r22
 9c4:	77 1f       	adc	r23, r23
 9c6:	88 1f       	adc	r24, r24
 9c8:	bb 1f       	adc	r27, r27
 9ca:	62 17       	cp	r22, r18
 9cc:	73 07       	cpc	r23, r19
 9ce:	84 07       	cpc	r24, r20
 9d0:	ba 07       	cpc	r27, r26
 9d2:	20 f0       	brcs	.+8      	; 0x9dc <__divsf3_pse+0xae>
 9d4:	62 1b       	sub	r22, r18
 9d6:	73 0b       	sbc	r23, r19
 9d8:	84 0b       	sbc	r24, r20
 9da:	ba 0b       	sbc	r27, r26
 9dc:	ee 1f       	adc	r30, r30
 9de:	88 f7       	brcc	.-30     	; 0x9c2 <__divsf3_pse+0x94>
 9e0:	e0 95       	com	r30
 9e2:	08 95       	ret

000009e4 <__fixsfsi>:
 9e4:	0e 94 f9 04 	call	0x9f2	; 0x9f2 <__fixunssfsi>
 9e8:	68 94       	set
 9ea:	b1 11       	cpse	r27, r1
 9ec:	0c 94 d4 05 	jmp	0xba8	; 0xba8 <__fp_szero>
 9f0:	08 95       	ret

000009f2 <__fixunssfsi>:
 9f2:	0e 94 b9 05 	call	0xb72	; 0xb72 <__fp_splitA>
 9f6:	88 f0       	brcs	.+34     	; 0xa1a <__fixunssfsi+0x28>
 9f8:	9f 57       	subi	r25, 0x7F	; 127
 9fa:	98 f0       	brcs	.+38     	; 0xa22 <__fixunssfsi+0x30>
 9fc:	b9 2f       	mov	r27, r25
 9fe:	99 27       	eor	r25, r25
 a00:	b7 51       	subi	r27, 0x17	; 23
 a02:	b0 f0       	brcs	.+44     	; 0xa30 <__fixunssfsi+0x3e>
 a04:	e1 f0       	breq	.+56     	; 0xa3e <__fixunssfsi+0x4c>
 a06:	66 0f       	add	r22, r22
 a08:	77 1f       	adc	r23, r23
 a0a:	88 1f       	adc	r24, r24
 a0c:	99 1f       	adc	r25, r25
 a0e:	1a f0       	brmi	.+6      	; 0xa16 <__fixunssfsi+0x24>
 a10:	ba 95       	dec	r27
 a12:	c9 f7       	brne	.-14     	; 0xa06 <__fixunssfsi+0x14>
 a14:	14 c0       	rjmp	.+40     	; 0xa3e <__fixunssfsi+0x4c>
 a16:	b1 30       	cpi	r27, 0x01	; 1
 a18:	91 f0       	breq	.+36     	; 0xa3e <__fixunssfsi+0x4c>
 a1a:	0e 94 d3 05 	call	0xba6	; 0xba6 <__fp_zero>
 a1e:	b1 e0       	ldi	r27, 0x01	; 1
 a20:	08 95       	ret
 a22:	0c 94 d3 05 	jmp	0xba6	; 0xba6 <__fp_zero>
 a26:	67 2f       	mov	r22, r23
 a28:	78 2f       	mov	r23, r24
 a2a:	88 27       	eor	r24, r24
 a2c:	b8 5f       	subi	r27, 0xF8	; 248
 a2e:	39 f0       	breq	.+14     	; 0xa3e <__fixunssfsi+0x4c>
 a30:	b9 3f       	cpi	r27, 0xF9	; 249
 a32:	cc f3       	brlt	.-14     	; 0xa26 <__fixunssfsi+0x34>
 a34:	86 95       	lsr	r24
 a36:	77 95       	ror	r23
 a38:	67 95       	ror	r22
 a3a:	b3 95       	inc	r27
 a3c:	d9 f7       	brne	.-10     	; 0xa34 <__fixunssfsi+0x42>
 a3e:	3e f4       	brtc	.+14     	; 0xa4e <__fixunssfsi+0x5c>
 a40:	90 95       	com	r25
 a42:	80 95       	com	r24
 a44:	70 95       	com	r23
 a46:	61 95       	neg	r22
 a48:	7f 4f       	sbci	r23, 0xFF	; 255
 a4a:	8f 4f       	sbci	r24, 0xFF	; 255
 a4c:	9f 4f       	sbci	r25, 0xFF	; 255
 a4e:	08 95       	ret

00000a50 <__floatunsisf>:
 a50:	e8 94       	clt
 a52:	09 c0       	rjmp	.+18     	; 0xa66 <__floatsisf+0x12>

00000a54 <__floatsisf>:
 a54:	97 fb       	bst	r25, 7
 a56:	3e f4       	brtc	.+14     	; 0xa66 <__floatsisf+0x12>
 a58:	90 95       	com	r25
 a5a:	80 95       	com	r24
 a5c:	70 95       	com	r23
 a5e:	61 95       	neg	r22
 a60:	7f 4f       	sbci	r23, 0xFF	; 255
 a62:	8f 4f       	sbci	r24, 0xFF	; 255
 a64:	9f 4f       	sbci	r25, 0xFF	; 255
 a66:	99 23       	and	r25, r25
 a68:	a9 f0       	breq	.+42     	; 0xa94 <__floatsisf+0x40>
 a6a:	f9 2f       	mov	r31, r25
 a6c:	96 e9       	ldi	r25, 0x96	; 150
 a6e:	bb 27       	eor	r27, r27
 a70:	93 95       	inc	r25
 a72:	f6 95       	lsr	r31
 a74:	87 95       	ror	r24
 a76:	77 95       	ror	r23
 a78:	67 95       	ror	r22
 a7a:	b7 95       	ror	r27
 a7c:	f1 11       	cpse	r31, r1
 a7e:	f8 cf       	rjmp	.-16     	; 0xa70 <__floatsisf+0x1c>
 a80:	fa f4       	brpl	.+62     	; 0xac0 <__floatsisf+0x6c>
 a82:	bb 0f       	add	r27, r27
 a84:	11 f4       	brne	.+4      	; 0xa8a <__floatsisf+0x36>
 a86:	60 ff       	sbrs	r22, 0
 a88:	1b c0       	rjmp	.+54     	; 0xac0 <__floatsisf+0x6c>
 a8a:	6f 5f       	subi	r22, 0xFF	; 255
 a8c:	7f 4f       	sbci	r23, 0xFF	; 255
 a8e:	8f 4f       	sbci	r24, 0xFF	; 255
 a90:	9f 4f       	sbci	r25, 0xFF	; 255
 a92:	16 c0       	rjmp	.+44     	; 0xac0 <__floatsisf+0x6c>
 a94:	88 23       	and	r24, r24
 a96:	11 f0       	breq	.+4      	; 0xa9c <__floatsisf+0x48>
 a98:	96 e9       	ldi	r25, 0x96	; 150
 a9a:	11 c0       	rjmp	.+34     	; 0xabe <__floatsisf+0x6a>
 a9c:	77 23       	and	r23, r23
 a9e:	21 f0       	breq	.+8      	; 0xaa8 <__floatsisf+0x54>
 aa0:	9e e8       	ldi	r25, 0x8E	; 142
 aa2:	87 2f       	mov	r24, r23
 aa4:	76 2f       	mov	r23, r22
 aa6:	05 c0       	rjmp	.+10     	; 0xab2 <__floatsisf+0x5e>
 aa8:	66 23       	and	r22, r22
 aaa:	71 f0       	breq	.+28     	; 0xac8 <__floatsisf+0x74>
 aac:	96 e8       	ldi	r25, 0x86	; 134
 aae:	86 2f       	mov	r24, r22
 ab0:	70 e0       	ldi	r23, 0x00	; 0
 ab2:	60 e0       	ldi	r22, 0x00	; 0
 ab4:	2a f0       	brmi	.+10     	; 0xac0 <__floatsisf+0x6c>
 ab6:	9a 95       	dec	r25
 ab8:	66 0f       	add	r22, r22
 aba:	77 1f       	adc	r23, r23
 abc:	88 1f       	adc	r24, r24
 abe:	da f7       	brpl	.-10     	; 0xab6 <__floatsisf+0x62>
 ac0:	88 0f       	add	r24, r24
 ac2:	96 95       	lsr	r25
 ac4:	87 95       	ror	r24
 ac6:	97 f9       	bld	r25, 7
 ac8:	08 95       	ret

00000aca <__fp_cmp>:
 aca:	99 0f       	add	r25, r25
 acc:	00 08       	sbc	r0, r0
 ace:	55 0f       	add	r21, r21
 ad0:	aa 0b       	sbc	r26, r26
 ad2:	e0 e8       	ldi	r30, 0x80	; 128
 ad4:	fe ef       	ldi	r31, 0xFE	; 254
 ad6:	16 16       	cp	r1, r22
 ad8:	17 06       	cpc	r1, r23
 ada:	e8 07       	cpc	r30, r24
 adc:	f9 07       	cpc	r31, r25
 ade:	c0 f0       	brcs	.+48     	; 0xb10 <__fp_cmp+0x46>
 ae0:	12 16       	cp	r1, r18
 ae2:	13 06       	cpc	r1, r19
 ae4:	e4 07       	cpc	r30, r20
 ae6:	f5 07       	cpc	r31, r21
 ae8:	98 f0       	brcs	.+38     	; 0xb10 <__fp_cmp+0x46>
 aea:	62 1b       	sub	r22, r18
 aec:	73 0b       	sbc	r23, r19
 aee:	84 0b       	sbc	r24, r20
 af0:	95 0b       	sbc	r25, r21
 af2:	39 f4       	brne	.+14     	; 0xb02 <__fp_cmp+0x38>
 af4:	0a 26       	eor	r0, r26
 af6:	61 f0       	breq	.+24     	; 0xb10 <__fp_cmp+0x46>
 af8:	23 2b       	or	r18, r19
 afa:	24 2b       	or	r18, r20
 afc:	25 2b       	or	r18, r21
 afe:	21 f4       	brne	.+8      	; 0xb08 <__fp_cmp+0x3e>
 b00:	08 95       	ret
 b02:	0a 26       	eor	r0, r26
 b04:	09 f4       	brne	.+2      	; 0xb08 <__fp_cmp+0x3e>
 b06:	a1 40       	sbci	r26, 0x01	; 1
 b08:	a6 95       	lsr	r26
 b0a:	8f ef       	ldi	r24, 0xFF	; 255
 b0c:	81 1d       	adc	r24, r1
 b0e:	81 1d       	adc	r24, r1
 b10:	08 95       	ret

00000b12 <__fp_inf>:
 b12:	97 f9       	bld	r25, 7
 b14:	9f 67       	ori	r25, 0x7F	; 127
 b16:	80 e8       	ldi	r24, 0x80	; 128
 b18:	70 e0       	ldi	r23, 0x00	; 0
 b1a:	60 e0       	ldi	r22, 0x00	; 0
 b1c:	08 95       	ret

00000b1e <__fp_nan>:
 b1e:	9f ef       	ldi	r25, 0xFF	; 255
 b20:	80 ec       	ldi	r24, 0xC0	; 192
 b22:	08 95       	ret

00000b24 <__fp_pscA>:
 b24:	00 24       	eor	r0, r0
 b26:	0a 94       	dec	r0
 b28:	16 16       	cp	r1, r22
 b2a:	17 06       	cpc	r1, r23
 b2c:	18 06       	cpc	r1, r24
 b2e:	09 06       	cpc	r0, r25
 b30:	08 95       	ret

00000b32 <__fp_pscB>:
 b32:	00 24       	eor	r0, r0
 b34:	0a 94       	dec	r0
 b36:	12 16       	cp	r1, r18
 b38:	13 06       	cpc	r1, r19
 b3a:	14 06       	cpc	r1, r20
 b3c:	05 06       	cpc	r0, r21
 b3e:	08 95       	ret

00000b40 <__fp_round>:
 b40:	09 2e       	mov	r0, r25
 b42:	03 94       	inc	r0
 b44:	00 0c       	add	r0, r0
 b46:	11 f4       	brne	.+4      	; 0xb4c <__fp_round+0xc>
 b48:	88 23       	and	r24, r24
 b4a:	52 f0       	brmi	.+20     	; 0xb60 <__fp_round+0x20>
 b4c:	bb 0f       	add	r27, r27
 b4e:	40 f4       	brcc	.+16     	; 0xb60 <__fp_round+0x20>
 b50:	bf 2b       	or	r27, r31
 b52:	11 f4       	brne	.+4      	; 0xb58 <__fp_round+0x18>
 b54:	60 ff       	sbrs	r22, 0
 b56:	04 c0       	rjmp	.+8      	; 0xb60 <__fp_round+0x20>
 b58:	6f 5f       	subi	r22, 0xFF	; 255
 b5a:	7f 4f       	sbci	r23, 0xFF	; 255
 b5c:	8f 4f       	sbci	r24, 0xFF	; 255
 b5e:	9f 4f       	sbci	r25, 0xFF	; 255
 b60:	08 95       	ret

00000b62 <__fp_split3>:
 b62:	57 fd       	sbrc	r21, 7
 b64:	90 58       	subi	r25, 0x80	; 128
 b66:	44 0f       	add	r20, r20
 b68:	55 1f       	adc	r21, r21
 b6a:	59 f0       	breq	.+22     	; 0xb82 <__fp_splitA+0x10>
 b6c:	5f 3f       	cpi	r21, 0xFF	; 255
 b6e:	71 f0       	breq	.+28     	; 0xb8c <__fp_splitA+0x1a>
 b70:	47 95       	ror	r20

00000b72 <__fp_splitA>:
 b72:	88 0f       	add	r24, r24
 b74:	97 fb       	bst	r25, 7
 b76:	99 1f       	adc	r25, r25
 b78:	61 f0       	breq	.+24     	; 0xb92 <__fp_splitA+0x20>
 b7a:	9f 3f       	cpi	r25, 0xFF	; 255
 b7c:	79 f0       	breq	.+30     	; 0xb9c <__fp_splitA+0x2a>
 b7e:	87 95       	ror	r24
 b80:	08 95       	ret
 b82:	12 16       	cp	r1, r18
 b84:	13 06       	cpc	r1, r19
 b86:	14 06       	cpc	r1, r20
 b88:	55 1f       	adc	r21, r21
 b8a:	f2 cf       	rjmp	.-28     	; 0xb70 <__fp_split3+0xe>
 b8c:	46 95       	lsr	r20
 b8e:	f1 df       	rcall	.-30     	; 0xb72 <__fp_splitA>
 b90:	08 c0       	rjmp	.+16     	; 0xba2 <__fp_splitA+0x30>
 b92:	16 16       	cp	r1, r22
 b94:	17 06       	cpc	r1, r23
 b96:	18 06       	cpc	r1, r24
 b98:	99 1f       	adc	r25, r25
 b9a:	f1 cf       	rjmp	.-30     	; 0xb7e <__fp_splitA+0xc>
 b9c:	86 95       	lsr	r24
 b9e:	71 05       	cpc	r23, r1
 ba0:	61 05       	cpc	r22, r1
 ba2:	08 94       	sec
 ba4:	08 95       	ret

00000ba6 <__fp_zero>:
 ba6:	e8 94       	clt

00000ba8 <__fp_szero>:
 ba8:	bb 27       	eor	r27, r27
 baa:	66 27       	eor	r22, r22
 bac:	77 27       	eor	r23, r23
 bae:	cb 01       	movw	r24, r22
 bb0:	97 f9       	bld	r25, 7
 bb2:	08 95       	ret

00000bb4 <__mulsf3>:
 bb4:	0e 94 ed 05 	call	0xbda	; 0xbda <__mulsf3x>
 bb8:	0c 94 a0 05 	jmp	0xb40	; 0xb40 <__fp_round>
 bbc:	0e 94 92 05 	call	0xb24	; 0xb24 <__fp_pscA>
 bc0:	38 f0       	brcs	.+14     	; 0xbd0 <__mulsf3+0x1c>
 bc2:	0e 94 99 05 	call	0xb32	; 0xb32 <__fp_pscB>
 bc6:	20 f0       	brcs	.+8      	; 0xbd0 <__mulsf3+0x1c>
 bc8:	95 23       	and	r25, r21
 bca:	11 f0       	breq	.+4      	; 0xbd0 <__mulsf3+0x1c>
 bcc:	0c 94 89 05 	jmp	0xb12	; 0xb12 <__fp_inf>
 bd0:	0c 94 8f 05 	jmp	0xb1e	; 0xb1e <__fp_nan>
 bd4:	11 24       	eor	r1, r1
 bd6:	0c 94 d4 05 	jmp	0xba8	; 0xba8 <__fp_szero>

00000bda <__mulsf3x>:
 bda:	0e 94 b1 05 	call	0xb62	; 0xb62 <__fp_split3>
 bde:	70 f3       	brcs	.-36     	; 0xbbc <__mulsf3+0x8>

00000be0 <__mulsf3_pse>:
 be0:	95 9f       	mul	r25, r21
 be2:	c1 f3       	breq	.-16     	; 0xbd4 <__mulsf3+0x20>
 be4:	95 0f       	add	r25, r21
 be6:	50 e0       	ldi	r21, 0x00	; 0
 be8:	55 1f       	adc	r21, r21
 bea:	62 9f       	mul	r22, r18
 bec:	f0 01       	movw	r30, r0
 bee:	72 9f       	mul	r23, r18
 bf0:	bb 27       	eor	r27, r27
 bf2:	f0 0d       	add	r31, r0
 bf4:	b1 1d       	adc	r27, r1
 bf6:	63 9f       	mul	r22, r19
 bf8:	aa 27       	eor	r26, r26
 bfa:	f0 0d       	add	r31, r0
 bfc:	b1 1d       	adc	r27, r1
 bfe:	aa 1f       	adc	r26, r26
 c00:	64 9f       	mul	r22, r20
 c02:	66 27       	eor	r22, r22
 c04:	b0 0d       	add	r27, r0
 c06:	a1 1d       	adc	r26, r1
 c08:	66 1f       	adc	r22, r22
 c0a:	82 9f       	mul	r24, r18
 c0c:	22 27       	eor	r18, r18
 c0e:	b0 0d       	add	r27, r0
 c10:	a1 1d       	adc	r26, r1
 c12:	62 1f       	adc	r22, r18
 c14:	73 9f       	mul	r23, r19
 c16:	b0 0d       	add	r27, r0
 c18:	a1 1d       	adc	r26, r1
 c1a:	62 1f       	adc	r22, r18
 c1c:	83 9f       	mul	r24, r19
 c1e:	a0 0d       	add	r26, r0
 c20:	61 1d       	adc	r22, r1
 c22:	22 1f       	adc	r18, r18
 c24:	74 9f       	mul	r23, r20
 c26:	33 27       	eor	r19, r19
 c28:	a0 0d       	add	r26, r0
 c2a:	61 1d       	adc	r22, r1
 c2c:	23 1f       	adc	r18, r19
 c2e:	84 9f       	mul	r24, r20
 c30:	60 0d       	add	r22, r0
 c32:	21 1d       	adc	r18, r1
 c34:	82 2f       	mov	r24, r18
 c36:	76 2f       	mov	r23, r22
 c38:	6a 2f       	mov	r22, r26
 c3a:	11 24       	eor	r1, r1
 c3c:	9f 57       	subi	r25, 0x7F	; 127
 c3e:	50 40       	sbci	r21, 0x00	; 0
 c40:	9a f0       	brmi	.+38     	; 0xc68 <__mulsf3_pse+0x88>
 c42:	f1 f0       	breq	.+60     	; 0xc80 <__mulsf3_pse+0xa0>
 c44:	88 23       	and	r24, r24
 c46:	4a f0       	brmi	.+18     	; 0xc5a <__mulsf3_pse+0x7a>
 c48:	ee 0f       	add	r30, r30
 c4a:	ff 1f       	adc	r31, r31
 c4c:	bb 1f       	adc	r27, r27
 c4e:	66 1f       	adc	r22, r22
 c50:	77 1f       	adc	r23, r23
 c52:	88 1f       	adc	r24, r24
 c54:	91 50       	subi	r25, 0x01	; 1
 c56:	50 40       	sbci	r21, 0x00	; 0
 c58:	a9 f7       	brne	.-22     	; 0xc44 <__mulsf3_pse+0x64>
 c5a:	9e 3f       	cpi	r25, 0xFE	; 254
 c5c:	51 05       	cpc	r21, r1
 c5e:	80 f0       	brcs	.+32     	; 0xc80 <__mulsf3_pse+0xa0>
 c60:	0c 94 89 05 	jmp	0xb12	; 0xb12 <__fp_inf>
 c64:	0c 94 d4 05 	jmp	0xba8	; 0xba8 <__fp_szero>
 c68:	5f 3f       	cpi	r21, 0xFF	; 255
 c6a:	e4 f3       	brlt	.-8      	; 0xc64 <__mulsf3_pse+0x84>
 c6c:	98 3e       	cpi	r25, 0xE8	; 232
 c6e:	d4 f3       	brlt	.-12     	; 0xc64 <__mulsf3_pse+0x84>
 c70:	86 95       	lsr	r24
 c72:	77 95       	ror	r23
 c74:	67 95       	ror	r22
 c76:	b7 95       	ror	r27
 c78:	f7 95       	ror	r31
 c7a:	e7 95       	ror	r30
 c7c:	9f 5f       	subi	r25, 0xFF	; 255
 c7e:	c1 f7       	brne	.-16     	; 0xc70 <__mulsf3_pse+0x90>
 c80:	fe 2b       	or	r31, r30
 c82:	88 0f       	add	r24, r24
 c84:	91 1d       	adc	r25, r1
 c86:	96 95       	lsr	r25
 c88:	87 95       	ror	r24
 c8a:	97 f9       	bld	r25, 7
 c8c:	08 95       	ret

00000c8e <__udivmodsi4>:
 c8e:	a1 e2       	ldi	r26, 0x21	; 33
 c90:	1a 2e       	mov	r1, r26
 c92:	aa 1b       	sub	r26, r26
 c94:	bb 1b       	sub	r27, r27
 c96:	fd 01       	movw	r30, r26
 c98:	0d c0       	rjmp	.+26     	; 0xcb4 <__udivmodsi4_ep>

00000c9a <__udivmodsi4_loop>:
 c9a:	aa 1f       	adc	r26, r26
 c9c:	bb 1f       	adc	r27, r27
 c9e:	ee 1f       	adc	r30, r30
 ca0:	ff 1f       	adc	r31, r31
 ca2:	a2 17       	cp	r26, r18
 ca4:	b3 07       	cpc	r27, r19
 ca6:	e4 07       	cpc	r30, r20
 ca8:	f5 07       	cpc	r31, r21
 caa:	20 f0       	brcs	.+8      	; 0xcb4 <__udivmodsi4_ep>
 cac:	a2 1b       	sub	r26, r18
 cae:	b3 0b       	sbc	r27, r19
 cb0:	e4 0b       	sbc	r30, r20
 cb2:	f5 0b       	sbc	r31, r21

00000cb4 <__udivmodsi4_ep>:
 cb4:	66 1f       	adc	r22, r22
 cb6:	77 1f       	adc	r23, r23
 cb8:	88 1f       	adc	r24, r24
 cba:	99 1f       	adc	r25, r25
 cbc:	1a 94       	dec	r1
 cbe:	69 f7       	brne	.-38     	; 0xc9a <__udivmodsi4_loop>
 cc0:	60 95       	com	r22
 cc2:	70 95       	com	r23
 cc4:	80 95       	com	r24
 cc6:	90 95       	com	r25
 cc8:	9b 01       	movw	r18, r22
 cca:	ac 01       	movw	r20, r24
 ccc:	bd 01       	movw	r22, r26
 cce:	cf 01       	movw	r24, r30
 cd0:	08 95       	ret

00000cd2 <_exit>:
 cd2:	f8 94       	cli

00000cd4 <__stop_program>:
 cd4:	ff cf       	rjmp	.-2      	; 0xcd4 <__stop_program>
